{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreyas\\\\OneDrive\\\\Desktop\\\\REACTAPPS\\\\product-list\\\\src\\\\ProductList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import './ProductList.css';\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [totalQuantity, setTotalQuantity] = useState(0);\n//   const [totalPrice, setTotalPrice] = useState(0);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchProductList();\n//   }, []);\n\n//   useEffect(() => {\n//     const calculateTotalQuantityAndPrice = () => {\n//         let totalQuantity = 0;\n//         let totalPrice = 0;\n\n//         if (Array.isArray(products)) {\n//           products.forEach((product) => {\n//             totalQuantity += product.quantity;\n//             totalPrice += product.quantity * product.price;\n//           });\n//         }\n\n//         setTotalQuantity(totalQuantity);\n//         setTotalPrice(totalPrice);\n//       };\n//     calculateTotalQuantityAndPrice();\n//   }, [products]);\n\n//   const fetchProductList = async () => {\n//     try {\n//       const response = await fetch(`'https://dummyjson.com/products'`);\n//       const data = await response.json();\n//       setProducts(data);\n//       setLoading(false);  \n//     } catch (error) {\n//       console.error('Error fetching product list:', error);\n//       setLoading(false);  \n//     }\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <table className=\"product-table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//             <th>Quantity</th>\n//             <th>Subtotal</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {Array.isArray(products) ? (\n//             products.map((product) => (\n//               <tr key={product.id}>\n//                 <td>{product.title}</td>\n//                 <td>Rs.{product.price}</td>\n//                 <td>{product.quantity}</td>\n//                 <td>Rs.{product.quantity * product.price}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"4\">No products found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//         {Array.isArray(products) && (\n//           <tfoot>\n//             <tr>\n//               <td colSpan=\"3\">Total:</td>\n//               <td>Rs.{totalPrice}</td>\n//             </tr>\n//           </tfoot>\n//         )}\n//       </table>\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\n//     </div>\n//   );\n// }\n\n// export default ProductList;\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport ProductList from '../../product-cart/src/components/ProductList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [quantity, setQuantity] = useState(1);\n  useEffect(() => {\n    fetchProductList();\n  }, []);\n  const fetchProductList = async () => {\n    try {\n      const response = await fetch('https://api.example.com/products');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching product list:', error);\n    }\n  };\n  const handleQuantityChange = (event, productId) => {\n    const newQuantity = parseInt(event.target.value);\n    setQuantity(newQuantity);\n\n    // Update the quantity for the specific product in the products state\n    setProducts(prevProducts => prevProducts.map(product => product.id === productId ? {\n      ...product,\n      quantity: newQuantity\n    } : product));\n  };\n  const calculateTotal = () => {\n    let total = 0;\n    products.forEach(product => {\n      const productTotal = product.price * product.quantity;\n      total += productTotal;\n    });\n    return total;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Rs.\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: product.quantity || quantity,\n              onChange: event => handleQuantityChange(event, product.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"Rs.\", product.price * (product.quantity || quantity)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Rs.\", calculateTotal()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EQ6PyWb2n0tsg9pUk1SaaItFlVQ=\");\n_c = App;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ProductList","jsxDEV","_jsxDEV","App","_s","products","setProducts","quantity","setQuantity","fetchProductList","response","fetch","data","json","error","console","handleQuantityChange","event","productId","newQuantity","parseInt","target","value","prevProducts","map","product","id","calculateTotal","total","forEach","productTotal","price","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/shreyas/OneDrive/Desktop/REACTAPPS/product-list/src/ProductList.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import './ProductList.css';\r\n\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [totalQuantity, setTotalQuantity] = useState(0);\r\n//   const [totalPrice, setTotalPrice] = useState(0);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     fetchProductList();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const calculateTotalQuantityAndPrice = () => {\r\n//         let totalQuantity = 0;\r\n//         let totalPrice = 0;\r\n    \r\n//         if (Array.isArray(products)) {\r\n//           products.forEach((product) => {\r\n//             totalQuantity += product.quantity;\r\n//             totalPrice += product.quantity * product.price;\r\n//           });\r\n//         }\r\n    \r\n//         setTotalQuantity(totalQuantity);\r\n//         setTotalPrice(totalPrice);\r\n//       };\r\n//     calculateTotalQuantityAndPrice();\r\n//   }, [products]);\r\n\r\n//   const fetchProductList = async () => {\r\n//     try {\r\n//       const response = await fetch(`'https://dummyjson.com/products'`);\r\n//       const data = await response.json();\r\n//       setProducts(data);\r\n//       setLoading(false);  \r\n//     } catch (error) {\r\n//       console.error('Error fetching product list:', error);\r\n//       setLoading(false);  \r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <table className=\"product-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price</th>\r\n//             <th>Quantity</th>\r\n//             <th>Subtotal</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {Array.isArray(products) ? (\r\n//             products.map((product) => (\r\n//               <tr key={product.id}>\r\n//                 <td>{product.title}</td>\r\n//                 <td>Rs.{product.price}</td>\r\n//                 <td>{product.quantity}</td>\r\n//                 <td>Rs.{product.quantity * product.price}</td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"4\">No products found</td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//         {Array.isArray(products) && (\r\n//           <tfoot>\r\n//             <tr>\r\n//               <td colSpan=\"3\">Total:</td>\r\n//               <td>Rs.{totalPrice}</td>\r\n//             </tr>\r\n//           </tfoot>\r\n//         )}\r\n//       </table>\r\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;\r\nimport React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport ProductList from '../../product-cart/src/components/ProductList';\r\n\r\nfunction App() {\r\n  const [products, setProducts] = useState([]);\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetchProductList();\r\n  }, []);\r\n\r\n  const fetchProductList = async () => {\r\n    try {\r\n      const response = await fetch('https://api.example.com/products');\r\n      const data = await response.json();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching product list:', error);\r\n    }\r\n  };\r\n\r\n  const handleQuantityChange = (event, productId) => {\r\n    const newQuantity = parseInt(event.target.value);\r\n    setQuantity(newQuantity);\r\n\r\n    // Update the quantity for the specific product in the products state\r\n    setProducts(prevProducts =>\r\n      prevProducts.map(product =>\r\n        product.id === productId ? { ...product, quantity: newQuantity } : product\r\n      )\r\n    );\r\n  };\r\n\r\n  const calculateTotal = () => {\r\n    let total = 0;\r\n    products.forEach(product => {\r\n      const productTotal = product.price * product.quantity;\r\n      total += productTotal;\r\n    });\r\n    return total;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Product List</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map(product => (\r\n            <tr key={product.id}>\r\n              <td>{product.name}</td>\r\n              <td>Rs.{product.price}</td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  value={product.quantity || quantity}\r\n                  onChange={event => handleQuantityChange(event, product.id)}\r\n                />\r\n              </td>\r\n              <td>Rs.{product.price * (product.quantity || quantity)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"total\">\r\n        <span>Total:</span>\r\n        <span>Rs.{calculateTotal()}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACdU,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC;MAChE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,WAAW,CAACM,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAED,MAAME,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IACjD,MAAMC,WAAW,GAAGC,QAAQ,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;IAChDd,WAAW,CAACW,WAAW,CAAC;;IAExB;IACAb,WAAW,CAACiB,YAAY,IACtBA,YAAY,CAACC,GAAG,CAACC,OAAO,IACtBA,OAAO,CAACC,EAAE,KAAKR,SAAS,GAAG;MAAE,GAAGO,OAAO;MAAElB,QAAQ,EAAEY;IAAY,CAAC,GAAGM,OACrE,CACF,CAAC;EACH,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIC,KAAK,GAAG,CAAC;IACbvB,QAAQ,CAACwB,OAAO,CAACJ,OAAO,IAAI;MAC1B,MAAMK,YAAY,GAAGL,OAAO,CAACM,KAAK,GAAGN,OAAO,CAAClB,QAAQ;MACrDqB,KAAK,IAAIE,YAAY;IACvB,CAAC,CAAC;IACF,OAAOF,KAAK;EACd,CAAC;EAED,oBACE1B,OAAA;IAAK8B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB/B,OAAA;MAAA+B,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBnC,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,eACE/B,OAAA;UAAA+B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACbnC,OAAA;YAAA+B,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdnC,OAAA;YAAA+B,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjBnC,OAAA;YAAA+B,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRnC,OAAA;QAAA+B,QAAA,EACG5B,QAAQ,CAACmB,GAAG,CAACC,OAAO,iBACnBvB,OAAA;UAAA+B,QAAA,gBACE/B,OAAA;YAAA+B,QAAA,EAAKR,OAAO,CAACa;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBnC,OAAA;YAAA+B,QAAA,GAAI,KAAG,EAACR,OAAO,CAACM,KAAK;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC3BnC,OAAA;YAAA+B,QAAA,eACE/B,OAAA;cACEqC,IAAI,EAAC,QAAQ;cACbjB,KAAK,EAAEG,OAAO,CAAClB,QAAQ,IAAIA,QAAS;cACpCiC,QAAQ,EAAEvB,KAAK,IAAID,oBAAoB,CAACC,KAAK,EAAEQ,OAAO,CAACC,EAAE;YAAE;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACLnC,OAAA;YAAA+B,QAAA,GAAI,KAAG,EAACR,OAAO,CAACM,KAAK,IAAIN,OAAO,CAAClB,QAAQ,IAAIA,QAAQ,CAAC;UAAA;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAVrDZ,OAAO,CAACC,EAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWf,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRnC,OAAA;MAAK8B,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpB/B,OAAA;QAAA+B,QAAA,EAAM;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnBnC,OAAA;QAAA+B,QAAA,GAAM,KAAG,EAACN,cAAc,CAAC,CAAC;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CA1EQD,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA4EZ,eAAeH,WAAW;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}