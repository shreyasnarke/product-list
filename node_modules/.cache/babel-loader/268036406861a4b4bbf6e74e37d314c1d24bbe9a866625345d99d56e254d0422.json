{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreyas\\\\OneDrive\\\\Desktop\\\\REACTAPPS\\\\product-list\\\\src\\\\ProductList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./ProductList.css\";\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [quantity, setQuantity] = useState(1);\n\n//   useEffect(() => {\n//     fetchProductList();\n//   }, []);\n\n//   const fetchProductList = async () => {\n//     try {\n//       const response = await fetch(\"https://dummyjson.com/products\");\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error(error);\n//       console.error(\"Error fetching product list:\", error);\n//     }\n//   };\n//   const handleQuantityChange = (event, productId) => {\n//     const newQuantity = parseInt(event.target.value);\n//     setQuantity(newQuantity);\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product.id === productId\n//           ? { ...product, quantity: newQuantity }\n//           : product\n//       )\n//     );\n//   };\n//   const calculateTotal = () => {\n//     let total = 0;\n\n//     if (Array.isArray(products)) {\n//       products.forEach((product) => {\n//         const productTotal = product.price * (product.quantity || quantity);\n//         total += productTotal;\n//       });\n//     }\n\n//     return total;\n//   };\n//   return (\n//     <div className=\"product-table\">\n//       <h1>Product List</h1>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//             <th>Quantity</th>\n//             <th>Total</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//   {Array.isArray(products) && products.length > 0 ? (\n//     products.map((product) => (\n//       <tr key={product.id}>\n//         <td>{product.title}</td>\n//         <td>Rs.{product.price}</td>\n//         <td>\n//           <input\n//             type=\"number\"\n//             value={product.quantity || quantity}\n//             onChange={(event) => handleQuantityChange(event, product.id)}\n//           />\n//         </td>\n//         <td>Rs.{product.price * (product.quantity || quantity)}</td>\n//       </tr>\n//     ))\n//   ) : (\n//     <tr>\n//       <td colSpan=\"4\">No products found</td>\n//     </tr>\n//   )}\n// </tbody>\n//       </table>\n//       <div className=\"total-quantity\">\n//         <span>Total:</span>\n//         <span>Rs.{calculateTotal()}</span>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ProductList;\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    fetchProductList();\n  }, []);\n  const fetchProductList = async () => {\n    try {\n      const response = await fetch(\"https://dummyjson.com/products\");\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error(\"Error fetching product list:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.isArray(products) && products.length > 0 ? products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: \"No products found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","fetchProductList","response","fetch","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","length","map","product","title","price","id","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/shreyas/OneDrive/Desktop/REACTAPPS/product-list/src/ProductList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"./ProductList.css\";\r\n\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [quantity, setQuantity] = useState(1);\r\n  \r\n//   useEffect(() => {\r\n//     fetchProductList();\r\n//   }, []);\r\n  \r\n//   const fetchProductList = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://dummyjson.com/products\");\r\n//       const data = await response.json();\r\n//       setProducts(data);\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       console.error(\"Error fetching product list:\", error);\r\n//     }\r\n//   };\r\n//   const handleQuantityChange = (event, productId) => {\r\n//     const newQuantity = parseInt(event.target.value);\r\n//     setQuantity(newQuantity);\r\n//     setProducts((prevProducts) =>\r\n//       prevProducts.map((product) =>\r\n//         product.id === productId\r\n//           ? { ...product, quantity: newQuantity }\r\n//           : product\r\n//       )\r\n//     );\r\n//   };\r\n//   const calculateTotal = () => {\r\n//     let total = 0;\r\n  \r\n//     if (Array.isArray(products)) {\r\n//       products.forEach((product) => {\r\n//         const productTotal = product.price * (product.quantity || quantity);\r\n//         total += productTotal;\r\n//       });\r\n//     }\r\n  \r\n//     return total;\r\n//   };\r\n//   return (\r\n//     <div className=\"product-table\">\r\n//       <h1>Product List</h1>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price</th>\r\n//             <th>Quantity</th>\r\n//             <th>Total</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//   {Array.isArray(products) && products.length > 0 ? (\r\n//     products.map((product) => (\r\n//       <tr key={product.id}>\r\n//         <td>{product.title}</td>\r\n//         <td>Rs.{product.price}</td>\r\n//         <td>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={product.quantity || quantity}\r\n//             onChange={(event) => handleQuantityChange(event, product.id)}\r\n//           />\r\n//         </td>\r\n//         <td>Rs.{product.price * (product.quantity || quantity)}</td>\r\n//       </tr>\r\n//     ))\r\n//   ) : (\r\n//     <tr>\r\n//       <td colSpan=\"4\">No products found</td>\r\n//     </tr>\r\n//   )}\r\n// </tbody>\r\n//       </table>\r\n//       <div className=\"total-quantity\">\r\n//         <span>Total:</span>\r\n//         <span>Rs.{calculateTotal()}</span>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchProductList();\r\n  }, []);\r\n\r\n  const fetchProductList = async () => {\r\n    try {\r\n      const response = await fetch(\"https://dummyjson.com/products\");\r\n      const data = await response.json();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching product list:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Product List</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>ID</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {Array.isArray(products) && products.length > 0 ? (\r\n            products.map((product) => (\r\n              <tr key={product.id}>\r\n                <td>{product.title}</td>\r\n                <td>{product.price}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"3\">No products found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}