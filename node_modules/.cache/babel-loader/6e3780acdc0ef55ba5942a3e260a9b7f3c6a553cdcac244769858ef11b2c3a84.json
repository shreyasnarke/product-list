{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreyas\\\\OneDrive\\\\Desktop\\\\REACTAPPS\\\\product-list\\\\src\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './ProductList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  useEffect(() => {\n    fetchProductList();\n  }, []);\n  useEffect(() => {\n    const calculateTotalQuantityAndPrice = () => {\n      let totalQuantity = 0;\n      let totalPrice = 0;\n      products.forEach(product => {\n        totalQuantity += product.quantity;\n        totalPrice += product.quantity * product.price;\n      });\n      setTotalQuantity(totalQuantity);\n      setTotalPrice(totalPrice);\n    };\n    calculateTotalQuantityAndPrice();\n  }, [products]);\n  const fetchProductList = async () => {\n    try {\n      const response = await fetch(`'https://dummyjson.com/products'`);\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching product list:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"product-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Subtotal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", product.quantity * product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: \"Total:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"total-quantity\",\n      children: [\"Total Quantity: \", totalQuantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"DnnhM9H66lNJ4WyEi/8+QhqawIk=\");\n_c = ProductList;\nexport default ProductList;\n\n// import React, { useEffect, useState } from 'react';\n// import './ProductList.css';\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [totalQuantity, setTotalQuantity] = useState(0);\n//   const [totalPrice, setTotalPrice] = useState(0);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchProductList();\n//   }, []);\n\n//   useEffect(() => {\n//     const calculateTotalQuantityAndPrice = () => {\n//         let totalQuantity = 0;\n//         let totalPrice = 0;\n\n//         if (Array.isArray(products)) {\n//           products.forEach((product) => {\n//             totalQuantity += product.quantity;\n//             totalPrice += product.quantity * product.price;\n//           });\n//         }\n\n//         setTotalQuantity(totalQuantity);\n//         setTotalPrice(totalPrice);\n//       };\n//     calculateTotalQuantityAndPrice();\n//   }, [products]);\n\n//   const fetchProductList = async () => {\n//     try {\n//       const response = await fetch(`'https://dummyjson.com/products'`);\n//       const data = await response.json();\n//       setProducts(data);\n//       setLoading(false);  \n//     } catch (error) {\n//       console.error('Error fetching product list:', error);\n//       setLoading(false);  \n//     }\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <table className=\"product-table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//             <th>Quantity</th>\n//             <th>Subtotal</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {Array.isArray(products) ? (\n//             products.map((product) => (\n//               <tr key={product.id}>\n//                 <td>{product.name}</td>\n//                 <td>Rs.{product.price}</td>\n//                 <td>{product.quantity}</td>\n//                 <td>Rs.{product.quantity * product.price}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"4\">No products found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//         {Array.isArray(products) && (\n//           <tfoot>\n//             <tr>\n//               <td colSpan=\"3\">Total:</td>\n//               <td>${totalPrice}</td>\n//             </tr>\n//           </tfoot>\n//         )}\n//       </table>\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\n//     </div>\n//   );\n// }\n\n// export default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","totalQuantity","setTotalQuantity","totalPrice","setTotalPrice","fetchProductList","calculateTotalQuantityAndPrice","forEach","product","quantity","price","response","fetch","data","json","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","name","id","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/shreyas/OneDrive/Desktop/REACTAPPS/product-list/src/ProductList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './ProductList.css';\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchProductList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const calculateTotalQuantityAndPrice = () => {\r\n        let totalQuantity = 0;\r\n        let totalPrice = 0;\r\n    \r\n        products.forEach((product) => {\r\n          totalQuantity += product.quantity;\r\n          totalPrice += product.quantity * product.price;\r\n        });\r\n    \r\n        setTotalQuantity(totalQuantity);\r\n        setTotalPrice(totalPrice);\r\n      };\r\n    \r\n    calculateTotalQuantityAndPrice();\r\n  }, [products]);\r\n\r\n  const fetchProductList = async () => {\r\n    try {\r\n      const response = await fetch(`'https://dummyjson.com/products'`);\r\n      const data = await response.json();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching product list:', error);\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <table className=\"product-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Subtotal</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product) => (\r\n            <tr key={product.id}>\r\n              <td>{product.name}</td>\r\n              <td>${product.price}</td>\r\n              <td>{product.quantity}</td>\r\n              <td>${product.quantity * product.price}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td colSpan=\"3\">Total:</td>\r\n            <td>${totalPrice}</td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n      <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import './ProductList.css';\r\n\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [totalQuantity, setTotalQuantity] = useState(0);\r\n//   const [totalPrice, setTotalPrice] = useState(0);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     fetchProductList();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const calculateTotalQuantityAndPrice = () => {\r\n//         let totalQuantity = 0;\r\n//         let totalPrice = 0;\r\n    \r\n//         if (Array.isArray(products)) {\r\n//           products.forEach((product) => {\r\n//             totalQuantity += product.quantity;\r\n//             totalPrice += product.quantity * product.price;\r\n//           });\r\n//         }\r\n    \r\n//         setTotalQuantity(totalQuantity);\r\n//         setTotalPrice(totalPrice);\r\n//       };\r\n//     calculateTotalQuantityAndPrice();\r\n//   }, [products]);\r\n\r\n//   const fetchProductList = async () => {\r\n//     try {\r\n//       const response = await fetch(`'https://dummyjson.com/products'`);\r\n//       const data = await response.json();\r\n//       setProducts(data);\r\n//       setLoading(false);  \r\n//     } catch (error) {\r\n//       console.error('Error fetching product list:', error);\r\n//       setLoading(false);  \r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <table className=\"product-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price</th>\r\n//             <th>Quantity</th>\r\n//             <th>Subtotal</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {Array.isArray(products) ? (\r\n//             products.map((product) => (\r\n//               <tr key={product.id}>\r\n//                 <td>{product.name}</td>\r\n//                 <td>Rs.{product.price}</td>\r\n//                 <td>{product.quantity}</td>\r\n//                 <td>Rs.{product.quantity * product.price}</td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"4\">No products found</td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//         {Array.isArray(products) && (\r\n//           <tfoot>\r\n//             <tr>\r\n//               <td colSpan=\"3\">Total:</td>\r\n//               <td>${totalPrice}</td>\r\n//             </tr>\r\n//           </tfoot>\r\n//         )}\r\n//       </table>\r\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}