{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react';\n// import './ProductList.css';\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [totalQuantity, setTotalQuantity] = useState(0);\n//   const [totalPrice, setTotalPrice] = useState(0);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     fetchProductList();\n//   }, []);\n\n//   useEffect(() => {\n//     const calculateTotalQuantityAndPrice = () => {\n//         let totalQuantity = 0;\n//         let totalPrice = 0;\n\n//         if (Array.isArray(products)) {\n//           products.forEach((product) => {\n//             totalQuantity += product.quantity;\n//             totalPrice += product.quantity * product.price;\n//           });\n//         }\n\n//         setTotalQuantity(totalQuantity);\n//         setTotalPrice(totalPrice);\n//       };\n//     calculateTotalQuantityAndPrice();\n//   }, [products]);\n\n//   const fetchProductList = async () => {\n//     try {\n//       const response = await fetch(`'https://dummyjson.com/products'`);\n//       const data = await response.json();\n//       setProducts(data);\n//       setLoading(false);  \n//     } catch (error) {\n//       console.error('Error fetching product list:', error);\n//       setLoading(false);  \n//     }\n//   };\n\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <table className=\"product-table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//             <th>Quantity</th>\n//             <th>Subtotal</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {Array.isArray(products) ? (\n//             products.map((product) => (\n//               <tr key={product.id}>\n//                 <td>{product.name}</td>\n//                 <td>Rs.{product.price}</td>\n//                 <td>{product.quantity}</td>\n//                 <td>Rs.{product.quantity * product.price}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"4\">No products found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//         {Array.isArray(products) && (\n//           <tfoot>\n//             <tr>\n//               <td colSpan=\"3\">Total:</td>\n//               <td>${totalPrice}</td>\n//             </tr>\n//           </tfoot>\n//         )}\n//       </table>\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\n//     </div>\n//   );\n// }\n\n// export default ProductList;","map":{"version":3,"names":[],"sources":["C:/Users/shreyas/OneDrive/Desktop/REACTAPPS/product-list/src/ProductList.js"],"sourcesContent":["\r\n// import React, { useEffect, useState } from 'react';\r\n// import './ProductList.css';\r\n\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [totalQuantity, setTotalQuantity] = useState(0);\r\n//   const [totalPrice, setTotalPrice] = useState(0);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     fetchProductList();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const calculateTotalQuantityAndPrice = () => {\r\n//         let totalQuantity = 0;\r\n//         let totalPrice = 0;\r\n    \r\n//         if (Array.isArray(products)) {\r\n//           products.forEach((product) => {\r\n//             totalQuantity += product.quantity;\r\n//             totalPrice += product.quantity * product.price;\r\n//           });\r\n//         }\r\n    \r\n//         setTotalQuantity(totalQuantity);\r\n//         setTotalPrice(totalPrice);\r\n//       };\r\n//     calculateTotalQuantityAndPrice();\r\n//   }, [products]);\r\n\r\n//   const fetchProductList = async () => {\r\n//     try {\r\n//       const response = await fetch(`'https://dummyjson.com/products'`);\r\n//       const data = await response.json();\r\n//       setProducts(data);\r\n//       setLoading(false);  \r\n//     } catch (error) {\r\n//       console.error('Error fetching product list:', error);\r\n//       setLoading(false);  \r\n//     }\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <table className=\"product-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price</th>\r\n//             <th>Quantity</th>\r\n//             <th>Subtotal</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {Array.isArray(products) ? (\r\n//             products.map((product) => (\r\n//               <tr key={product.id}>\r\n//                 <td>{product.name}</td>\r\n//                 <td>Rs.{product.price}</td>\r\n//                 <td>{product.quantity}</td>\r\n//                 <td>Rs.{product.quantity * product.price}</td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"4\">No products found</td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//         {Array.isArray(products) && (\r\n//           <tfoot>\r\n//             <tr>\r\n//               <td colSpan=\"3\">Total:</td>\r\n//               <td>${totalPrice}</td>\r\n//             </tr>\r\n//           </tfoot>\r\n//         )}\r\n//       </table>\r\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;\r\n"],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}