{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import './ProductList.css';\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [totalQuantity, setTotalQuantity] = useState(0);\n\n//   useEffect(() => {\n//     fetchProductList();\n//   }, []);\n\n//   useEffect(() => {\n//     const calculateTotalQuantity = () => {\n//         const total = products.reduce((acc, product) => acc + product.quantity, 0);\n//         setTotalQuantity(total);\n//       };\n//     calculateTotalQuantity();\n//   }, [products]);\n\n//   const fetchProductList = async () => {\n//     try {\n//       const response = await fetch('https://dummyjson.com/products');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching product list:', error);\n//     }\n//   };\n\n// //   const calculateTotalQuantity = () => {\n// //     const total = products.reduce((acc, product) => acc + product.quantity, 0);\n// //     setTotalQuantity(total);\n// //   };\n\n//   return (\n//     <div>\n//       <table>\n//         <head>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//             <th>Quantity</th>\n//           </tr>\n//         </head>\n//         <body>\n//           {products.map((product) => (\n//             <tr key={product.id}>\n//               <td>{product.name}</td>\n//               <td>{product.price}</td>\n//               <td>{product.quantity}</td>\n//             </tr>\n//           ))}\n//         </body>\n//       </table>\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\n//     </div>\n//   );\n// }\n\n// export default ProductList;\n// import React, { useEffect, useState } from 'react';\n// import './ProductList.css';\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [totalQuantity, setTotalQuantity] = useState(0);\n\n//   useEffect(() => {\n//     fetchProductList();\n//   }, []);\n\n//   useEffect(() => {\n//     const calculateTotalQuantity = () => {\n//         if (Array.isArray(products)) {\n//           const total = products.reduce((acc, product) => acc + product.quantity, 0);\n//           setTotalQuantity(total);\n//         }\n//       };\n//     calculateTotalQuantity();\n//   }, [products]);\n\n//   const fetchProductList = async () => {\n//     try {\n//       const response = await fetch('https://dummyjson.com/products');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching product list:', error);\n//     }\n//   };\n\n// //   const calculateTotalQuantity = () => {\n// //     if (Array.isArray(products)) {\n// //       const total = products.reduce((acc, product) => acc + product.quantity, 0);\n// //       setTotalQuantity(total);\n// //     }\n// //   };\n\n//   return (\n//     <div>\n//       <table className=\"product-table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//             <th>Quantity</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {Array.isArray(products) ? (\n//             products.map((product) => (\n//               <tr key={product.id}>\n//                 <td>{product.name}</td>\n//                 <td>{product.price}</td>\n//                 <td>{product.quantity}</td>\n//               </tr>\n//             ))\n//           ) : (\n//             <tr>\n//               <td colSpan=\"3\">No products found</td>\n//             </tr>\n//           )}\n//         </tbody>\n//       </table>\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\n//     </div>\n//   );\n// }\n\n// export default ProductList;","map":{"version":3,"names":[],"sources":["C:/Users/shreyas/OneDrive/Desktop/REACTAPPS/product-list/src/ProductList.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import './ProductList.css';\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [totalQuantity, setTotalQuantity] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     fetchProductList();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const calculateTotalQuantity = () => {\r\n//         const total = products.reduce((acc, product) => acc + product.quantity, 0);\r\n//         setTotalQuantity(total);\r\n//       };\r\n//     calculateTotalQuantity();\r\n//   }, [products]);\r\n\r\n//   const fetchProductList = async () => {\r\n//     try {\r\n//       const response = await fetch('https://dummyjson.com/products');\r\n//       const data = await response.json();\r\n//       setProducts(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching product list:', error);\r\n//     }\r\n//   };\r\n\r\n// //   const calculateTotalQuantity = () => {\r\n// //     const total = products.reduce((acc, product) => acc + product.quantity, 0);\r\n// //     setTotalQuantity(total);\r\n// //   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <table>\r\n//         <head>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price</th>\r\n//             <th>Quantity</th>\r\n//           </tr>\r\n//         </head>\r\n//         <body>\r\n//           {products.map((product) => (\r\n//             <tr key={product.id}>\r\n//               <td>{product.name}</td>\r\n//               <td>{product.price}</td>\r\n//               <td>{product.quantity}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </body>\r\n//       </table>\r\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;\r\n// import React, { useEffect, useState } from 'react';\r\n// import './ProductList.css';\r\n\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [totalQuantity, setTotalQuantity] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     fetchProductList();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const calculateTotalQuantity = () => {\r\n//         if (Array.isArray(products)) {\r\n//           const total = products.reduce((acc, product) => acc + product.quantity, 0);\r\n//           setTotalQuantity(total);\r\n//         }\r\n//       };\r\n//     calculateTotalQuantity();\r\n//   }, [products]);\r\n\r\n//   const fetchProductList = async () => {\r\n//     try {\r\n//       const response = await fetch('https://dummyjson.com/products');\r\n//       const data = await response.json();\r\n//       setProducts(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching product list:', error);\r\n//     }\r\n//   };\r\n\r\n// //   const calculateTotalQuantity = () => {\r\n// //     if (Array.isArray(products)) {\r\n// //       const total = products.reduce((acc, product) => acc + product.quantity, 0);\r\n// //       setTotalQuantity(total);\r\n// //     }\r\n// //   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <table className=\"product-table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price</th>\r\n//             <th>Quantity</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {Array.isArray(products) ? (\r\n//             products.map((product) => (\r\n//               <tr key={product.id}>\r\n//                 <td>{product.name}</td>\r\n//                 <td>{product.price}</td>\r\n//                 <td>{product.quantity}</td>\r\n//               </tr>\r\n//             ))\r\n//           ) : (\r\n//             <tr>\r\n//               <td colSpan=\"3\">No products found</td>\r\n//             </tr>\r\n//           )}\r\n//         </tbody>\r\n//       </table>\r\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}