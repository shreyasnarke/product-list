{"ast":null,"code":"var _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import \"./ProductList.css\";\n\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [quantity, setQuantity] = useState(1);\n\n//   useEffect(() => {\n//     fetchProductList();\n//   }, []);\n\n//   const fetchProductList = async () => {\n//     try {\n//       const response = await fetch(\"https://dummyjson.com/products\");\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error(error);\n//       console.error(\"Error fetching product list:\", error);\n//     }\n//   };\n//   const handleQuantityChange = (event, productId) => {\n//     const newQuantity = parseInt(event.target.value);\n//     setQuantity(newQuantity);\n//     setProducts((prevProducts) =>\n//       prevProducts.map((product) =>\n//         product.id === productId\n//           ? { ...product, quantity: newQuantity }\n//           : product\n//       )\n//     );\n//   };\n//   const calculateTotal = () => {\n//     let total = 0;\n\n//     if (Array.isArray(products)) {\n//       products.forEach((product) => {\n//         const productTotal = product.price * (product.quantity || quantity);\n//         total = total+productTotal;\n//       });\n//     }\n\n//     return total;\n//   };\n//   return (\n//     <div className=\"product-table\">\n//       <h1>Product List</h1>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//             <th>Quantity</th>\n//             <th>Total</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//   {Array.isArray(products) && products.length > 0 ? (\n//     products.map((product) => (\n//       <tr key={product.id}>\n//         <td>{product.title}</td>\n//         <td>Rs.{product.price}</td>\n//         <td>\n//           <input\n//             type=\"number\"\n//             value={product.quantity || quantity}\n//             onChange={(event) => handleQuantityChange(event, product.id)}\n//           />\n//         </td>\n//         <td>Rs.{product.price * (product.quantity || quantity)}</td>\n//       </tr>\n//     ))\n//   ) : (\n//     <tr>\n//       <td colSpan=\"4\">No products found</td>\n//     </tr>\n//   )}\n// </tbody>\n//       </table>\n//       <div className=\"total-quantity\">\n//         <span>Total:</span>\n//         <span>Rs.{calculateTotal()}</span>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default ProductList;\nimport { useState, useEffect } from \"react\";\nimport { fetchProductList } from \"./api\";\nimport \"./ProductList.css\";\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  // const [quantity, setQuantity] = useState(1);\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      const data = await fetchProductList();\n      setProducts(data);\n    } catch (error) {\n      console.error(\"Error fetching product list:\", error);\n    }\n  };\n\n  // Rest of the component code remains the same...\n}\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["useState","useEffect","fetchProductList","ProductList","_s","products","setProducts","fetchProducts","data","error","console","_c","$RefreshReg$"],"sources":["C:/Users/shreyas/OneDrive/Desktop/REACTAPPS/product-list/src/ProductList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import \"./ProductList.css\";\r\n\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [quantity, setQuantity] = useState(1);\r\n  \r\n//   useEffect(() => {\r\n//     fetchProductList();\r\n//   }, []);\r\n  \r\n//   const fetchProductList = async () => {\r\n//     try {\r\n//       const response = await fetch(\"https://dummyjson.com/products\");\r\n//       const data = await response.json();\r\n//       setProducts(data);\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//       console.error(\"Error fetching product list:\", error);\r\n//     }\r\n//   };\r\n//   const handleQuantityChange = (event, productId) => {\r\n//     const newQuantity = parseInt(event.target.value);\r\n//     setQuantity(newQuantity);\r\n//     setProducts((prevProducts) =>\r\n//       prevProducts.map((product) =>\r\n//         product.id === productId\r\n//           ? { ...product, quantity: newQuantity }\r\n//           : product\r\n//       )\r\n//     );\r\n//   };\r\n//   const calculateTotal = () => {\r\n//     let total = 0;\r\n  \r\n//     if (Array.isArray(products)) {\r\n//       products.forEach((product) => {\r\n//         const productTotal = product.price * (product.quantity || quantity);\r\n//         total = total+productTotal;\r\n//       });\r\n//     }\r\n  \r\n//     return total;\r\n//   };\r\n//   return (\r\n//     <div className=\"product-table\">\r\n//       <h1>Product List</h1>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price</th>\r\n//             <th>Quantity</th>\r\n//             <th>Total</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//   {Array.isArray(products) && products.length > 0 ? (\r\n//     products.map((product) => (\r\n//       <tr key={product.id}>\r\n//         <td>{product.title}</td>\r\n//         <td>Rs.{product.price}</td>\r\n//         <td>\r\n//           <input\r\n//             type=\"number\"\r\n//             value={product.quantity || quantity}\r\n//             onChange={(event) => handleQuantityChange(event, product.id)}\r\n//           />\r\n//         </td>\r\n//         <td>Rs.{product.price * (product.quantity || quantity)}</td>\r\n//       </tr>\r\n//     ))\r\n//   ) : (\r\n//     <tr>\r\n//       <td colSpan=\"4\">No products found</td>\r\n//     </tr>\r\n//   )}\r\n// </tbody>\r\n//       </table>\r\n//       <div className=\"total-quantity\">\r\n//         <span>Total:</span>\r\n//         <span>Rs.{calculateTotal()}</span>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;\r\nimport { useState, useEffect } from \"react\";\r\nimport { fetchProductList } from \"./api\";\r\nimport \"./ProductList.css\";\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n  // const [quantity, setQuantity] = useState(1);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const data = await fetchProductList();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching product list:\", error);\r\n    }\r\n  };\r\n\r\n  // Rest of the component code remains the same...\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,gBAAgB,QAAQ,OAAO;AACxC,OAAO,mBAAmB;AAE1B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C;;EAEAC,SAAS,CAAC,MAAM;IACdM,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMN,gBAAgB,CAAC,CAAC;MACrCI,WAAW,CAACE,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAED;AACF;AAACL,EAAA,CAlBQD,WAAW;AAAAQ,EAAA,GAAXR,WAAW;AAoBpB,eAAeA,WAAW;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}