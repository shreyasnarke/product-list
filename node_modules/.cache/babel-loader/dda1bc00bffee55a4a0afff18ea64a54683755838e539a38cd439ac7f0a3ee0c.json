{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shreyas\\\\OneDrive\\\\Desktop\\\\REACTAPPS\\\\product-list\\\\src\\\\ProductList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import './ProductList.css';\n// function ProductList() {\n//   const [products, setProducts] = useState([]);\n//   const [totalQuantity, setTotalQuantity] = useState(0);\n\n//   useEffect(() => {\n//     fetchProductList();\n//   }, []);\n\n//   useEffect(() => {\n//     const calculateTotalQuantity = () => {\n//         const total = products.reduce((acc, product) => acc + product.quantity, 0);\n//         setTotalQuantity(total);\n//       };\n//     calculateTotalQuantity();\n//   }, [products]);\n\n//   const fetchProductList = async () => {\n//     try {\n//       const response = await fetch('https://dummyjson.com/products');\n//       const data = await response.json();\n//       setProducts(data);\n//     } catch (error) {\n//       console.error('Error fetching product list:', error);\n//     }\n//   };\n\n// //   const calculateTotalQuantity = () => {\n// //     const total = products.reduce((acc, product) => acc + product.quantity, 0);\n// //     setTotalQuantity(total);\n// //   };\n\n//   return (\n//     <div>\n//       <table>\n//         <head>\n//           <tr>\n//             <th>Name</th>\n//             <th>Price</th>\n//             <th>Quantity</th>\n//           </tr>\n//         </head>\n//         <body>\n//           {products.map((product) => (\n//             <tr key={product.id}>\n//               <td>{product.name}</td>\n//               <td>{product.price}</td>\n//               <td>{product.quantity}</td>\n//             </tr>\n//           ))}\n//         </body>\n//       </table>\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\n//     </div>\n//   );\n// }\n\n// export default ProductList;\nimport React, { useEffect, useState } from 'react';\nimport './ProductList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductList() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  useEffect(() => {\n    fetchProductList();\n  }, []);\n  useEffect(() => {\n    calculateTotalQuantity();\n  }, [products]);\n  const fetchProductList = async () => {\n    try {\n      const response = await fetch('https://api.example.com/products');\n      const data = await response.json();\n      setProducts(data);\n    } catch (error) {\n      console.error('Error fetching product list:', error);\n    }\n  };\n\n  //   const calculateTotalQuantity = () => {\n  //     if (Array.isArray(products)) {\n  //       const total = products.reduce((acc, product) => acc + product.quantity, 0);\n  //       setTotalQuantity(total);\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"product-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.isArray(products) ? products.map(product => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            children: \"No products found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"total-quantity\",\n      children: [\"Total Quantity: \", totalQuantity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductList, \"ksBBmA5PcKK0weoXefBH8a1if28=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","totalQuantity","setTotalQuantity","fetchProductList","calculateTotalQuantity","response","fetch","data","json","error","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","product","name","price","quantity","id","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/shreyas/OneDrive/Desktop/REACTAPPS/product-list/src/ProductList.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import './ProductList.css';\r\n// function ProductList() {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [totalQuantity, setTotalQuantity] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     fetchProductList();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const calculateTotalQuantity = () => {\r\n//         const total = products.reduce((acc, product) => acc + product.quantity, 0);\r\n//         setTotalQuantity(total);\r\n//       };\r\n//     calculateTotalQuantity();\r\n//   }, [products]);\r\n\r\n//   const fetchProductList = async () => {\r\n//     try {\r\n//       const response = await fetch('https://dummyjson.com/products');\r\n//       const data = await response.json();\r\n//       setProducts(data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching product list:', error);\r\n//     }\r\n//   };\r\n\r\n// //   const calculateTotalQuantity = () => {\r\n// //     const total = products.reduce((acc, product) => acc + product.quantity, 0);\r\n// //     setTotalQuantity(total);\r\n// //   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <table>\r\n//         <head>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Price</th>\r\n//             <th>Quantity</th>\r\n//           </tr>\r\n//         </head>\r\n//         <body>\r\n//           {products.map((product) => (\r\n//             <tr key={product.id}>\r\n//               <td>{product.name}</td>\r\n//               <td>{product.price}</td>\r\n//               <td>{product.quantity}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </body>\r\n//       </table>\r\n//       <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default ProductList;\r\nimport React, { useEffect, useState } from 'react';\r\nimport './ProductList.css';\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useState([]);\r\n  const [totalQuantity, setTotalQuantity] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchProductList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    calculateTotalQuantity();\r\n  }, [products]);\r\n\r\n  const fetchProductList = async () => {\r\n    try {\r\n      const response = await fetch('https://api.example.com/products');\r\n      const data = await response.json();\r\n      setProducts(data);\r\n    } catch (error) {\r\n      console.error('Error fetching product list:', error);\r\n    }\r\n  };\r\n\r\n//   const calculateTotalQuantity = () => {\r\n//     if (Array.isArray(products)) {\r\n//       const total = products.reduce((acc, product) => acc + product.quantity, 0);\r\n//       setTotalQuantity(total);\r\n//     }\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      <table className=\"product-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Array.isArray(products) ? (\r\n            products.map((product) => (\r\n              <tr key={product.id}>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.quantity}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"3\">No products found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <p className=\"total-quantity\">Total Quantity: {totalQuantity}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}